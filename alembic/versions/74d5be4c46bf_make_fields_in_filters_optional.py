"""make fields in filters optional

Revision ID: 74d5be4c46bf
Revises: 3cae8040645d
Create Date: 2025-07-23 17:38:29.210724

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "74d5be4c46bf"
down_revision = "3cae8040645d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "filters",
        "type",
        existing_type=postgresql.ENUM(
            "MULTI_APARTMENT", "TOWNHOUSE", "COTTAGE", "VILLA", name="filter_type_enum"
        ),
        nullable=True,
    )
    op.alter_column(
        "filters",
        "status",
        existing_type=postgresql.ENUM(
            "UNDER_CONSTRUCTION", "BUILT", "COMMISSIONED", name="filter_status_enum"
        ),
        nullable=True,
    )
    op.alter_column("filters", "district", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "filters", "neighborhood", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "filters",
        "rooms",
        existing_type=postgresql.ENUM(
            "ONE",
            "TWO",
            "THREE",
            "FOUR",
            "FIVE",
            "SIX",
            "SEVEN",
            "EIGHT",
            "NINE",
            "TEN",
            name="filter_rooms_enum",
        ),
        nullable=True,
    )
    op.alter_column("filters", "price_min", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("filters", "price_max", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("filters", "area_min", existing_type=sa.NUMERIC(), nullable=True)
    op.alter_column("filters", "area_max", existing_type=sa.NUMERIC(), nullable=True)
    op.alter_column(
        "filters",
        "property_type",
        existing_type=postgresql.ENUM(
            "RESIDENTIAL",
            "COMMERCIAL",
            "INDUSTRIAL",
            "LAND",
            name="filter_property_type_enum",
        ),
        nullable=True,
    )
    op.alter_column(
        "filters",
        "billing_options",
        existing_type=postgresql.ENUM(
            "MORTGAGE",
            "CASH",
            "INSTALLMENT",
            "LEASING",
            "STATE_PROGRAM",
            name="filter_billing_options_enum",
        ),
        nullable=True,
    )
    op.alter_column(
        "filters",
        "finishing",
        existing_type=postgresql.ENUM(
            "NO_FINISHING",
            "ROUGH",
            "PARTIALLY",
            "PRE",
            "FULLY",
            name="filter_finishing_enum",
        ),
        nullable=True,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "filters",
        "finishing",
        existing_type=postgresql.ENUM(
            "NO_FINISHING",
            "ROUGH",
            "PARTIALLY",
            "PRE",
            "FULLY",
            name="filter_finishing_enum",
        ),
        nullable=False,
    )
    op.alter_column(
        "filters",
        "billing_options",
        existing_type=postgresql.ENUM(
            "MORTGAGE",
            "CASH",
            "INSTALLMENT",
            "LEASING",
            "STATE_PROGRAM",
            name="filter_billing_options_enum",
        ),
        nullable=False,
    )
    op.alter_column(
        "filters",
        "property_type",
        existing_type=postgresql.ENUM(
            "RESIDENTIAL",
            "COMMERCIAL",
            "INDUSTRIAL",
            "LAND",
            name="filter_property_type_enum",
        ),
        nullable=False,
    )
    op.alter_column("filters", "area_max", existing_type=sa.NUMERIC(), nullable=False)
    op.alter_column("filters", "area_min", existing_type=sa.NUMERIC(), nullable=False)
    op.alter_column("filters", "price_max", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("filters", "price_min", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column(
        "filters",
        "rooms",
        existing_type=postgresql.ENUM(
            "ONE",
            "TWO",
            "THREE",
            "FOUR",
            "FIVE",
            "SIX",
            "SEVEN",
            "EIGHT",
            "NINE",
            "TEN",
            name="filter_rooms_enum",
        ),
        nullable=False,
    )
    op.alter_column(
        "filters", "neighborhood", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column("filters", "district", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "filters",
        "status",
        existing_type=postgresql.ENUM(
            "UNDER_CONSTRUCTION", "BUILT", "COMMISSIONED", name="filter_status_enum"
        ),
        nullable=False,
    )
    op.alter_column(
        "filters",
        "type",
        existing_type=postgresql.ENUM(
            "MULTI_APARTMENT", "TOWNHOUSE", "COTTAGE", "VILLA", name="filter_type_enum"
        ),
        nullable=False,
    )
    # ### end Alembic commands ###
